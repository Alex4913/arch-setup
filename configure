#!/bin/bash
# configure
# aoneill - 09/25/15

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

function usage() {
  cat << EOF
usage: $0 [OPTION]

Alex O'Neill's Arch Customizer

Options:
  -q, --quiet    Run without any status messages or explanation.
  -d, --dry-run  Only display proposed changes, do not change anything.
  -u, --update   Run in an "update-only" mode, where it is assumed that
                 previously an install was preformed.
EOF
}


function args() {
  export QUIET=0
  export DRY_RUN=0
  export MODE="install"

  local _args="$@"
  while [[ ${1:0:1} == - ]]; do
    term="$1"
    case "$term" in
      -q|--quiet)
        export QUIET=1
        ;;

      -d|--dry-run)
        export DRY_RUN=1
        ;;

      -u|--update)
        export MODE="update"
      
      *)
        usage 
        return 1
    esac

    shift 1
  done
}

function blurb() {
  section "Alex O'Neill's Arch Customizer"  

  echo -e "\
This is intended to configure a vanilla installation of Arch Linux to be
as close to the working copy I run on my various computers. See the README
for more information!\n"
}

function init() {
  # Populate variables
  args $@ || return
  shift $#

  # Get various tools
  SETUP="$DIR/setup"
  source "$SETUP/setup.sh"
  
  # Need root-level permissions (assuming no sudo)
  if [[ "$(whoami)" != "root" ]]; then
    echo "Need root-level access. Run as root!"
    exit
  fi

  # See if we are in a chroot (installing from a key)
  if [ "$(stat -c %d:%i /)" != "$(stat -c %d:%i /proc/1/root/.)" ]
  then
    blurb
    echo "Currently configuring while booted from live media. Will skip"
    echo "program-specific installation. Run '$0' once booted into bare arch"
    echo "installation with root user to configure programs and"
    echo -e "environment fully.\n"
    pause

    "$SETUP/setup.sh" $SETUP_PREP
    
    echo "'reboot' and run '$0' from Arch install"
  else
    blurb
    echo "Currently configuring while truly booted into Arch. Skipping"
    echo -e "initial configuration, working on package-specific configuration."
    pause
    
    "$SETUP/setup.sh" $SETUP_PACK
    "$SETUP/setup.sh" $SETUP_POST

    echo "'reboot' to apply all changes"
  fi
}

# Run init only when run
EXEC=$(test "${BASH_SOURCE[0]}" != "${0}"; echo $?)
[[ "$EXEC" == "1" ]] && init $@
