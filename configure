#!/bin/bash
# configure
# aoneill - 09/25/15

export CWD="$PWD"
export SUPPORT="$CWD/support"

function global-setup() {
  "$SUPPORT/00-global-gen"
}

function pre-setup() {
  cd $SUPPORT
  for file in $(find . -maxdepth 1 -type f -name "*-*" -not -name "0*" | sort)
  do
    if [[ -x "$file" ]]
    then
      "$file"
      pause
    fi
  done
  cd $CWD
}

function prog-setup() {
  cd $PROGS
  for file in $(find . -maxdepth 1 -type f | sort)
  do
    if [[ -x "$file" ]]
    then
      "$file"
      pause
    fi
  done
  cd $CWD
}

function blurb() {
  section "Alex O'Neill's Arch Customizer"  

  echo -e "\
This is intended to configure a vanilla installation of Arch Linux to be
as close to the working copy I run on my various computers. See the README
for more information!\n"
}


function init() {
  # Need root-level permissions (assuming no sudo)
  if [[ "$(whoami)" != "root" ]]
  then
    echo "Need root-level access. Run as root!"
    exit
  fi
  
  if [ "$(stat -c %d:%i /)" != "$(stat -c %d:%i /proc/1/root/.)" ]
  then
    global-setup
    source "$SUPPORT/globals"

    blurb
    echo "Currently configuring while booted from live media. Will skip"
    echo "program-specific installation. Run '$0' once booted into bare arch"
    echo "installation with root user to configure programs and"
    echo -e "environment fully.\n"

    pause
    pre-setup
    
    echo "'reboot' and run '$0' from Arch install"
  else
    source "$SUPPORT/globals"
    
    blurb
    echo "Currently configuring while truly booted into Arch. Skipping"
    echo -e "initial configuration, working on package-specific configuration."
    
    pause
    prog-setup

    echo "'reboot' to apply all changes"
  fi
}

init $@
