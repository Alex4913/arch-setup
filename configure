#!/bin/bash
# configure
# aoneill - 09/25/15

RESOURCES="resources"
CWD="$(pwd)"

# Temporary method to pull packages from AUR (to install yaourt)
function AURShim() {
  pkg="$1"
  filename="${pkg}.tar.gz"
  
  echo "Installing $pkg from AUR..."
  exit

  # Get package
  tmp="$(mktemp -d)"
  cd "$tmp"
  wget "https://aur.archlinux.org/cgit/aur.git/snapshot/$filename" &>/dev/null
  tar xf "$filename"
  cd "$pkg"

  # Make contents and install
  makepkg --noconfirm -sri &>/dev/null

  cd "$CWD"
}

# Install all the packages needed
function packages() {
  for manager in pacman yaourt
  do
    file="$CWD/$RESOURCES/packages.$manager"
    echo $manager --noconfirm -S $(cat "$file")
  done
}

function post-install() {
  SETUP="setup"
  cd "$CWD/$RESOURCES/$SETUP"

  tmp=$(mktemp)
  find * -maxdepth 0 -type d > $tmp

  exec 3>&1
  out=$(eval "dialog --title \"Install Step\" --menu \"Step:\" 10 30 3 $(cat -n $tmp)" 2>&1 1>&3)
  exec 3>&-

  step=$(sed -e "${out}q;d" $tmp)
  cd $step

  for file in $(ls)
  do
    if [[ -x "$file" ]]
    then
      "$file"
    fi
  done
}

# Need root-level permissions (assuming no sudo)
if [[ "$(whoami)" != "root" ]]
then
  echo "Need root-level access. Run as root!"
  exit
fi

echo "Installer of Alex O'Neill's Arch Environmrnt"
echo -n "Desired username: "
read user
export MAIN_USER=$user

# Setup pacman for 32-bit libs
echo "
[multilib]
Include = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf

# Install needed packages for future use
AURShim package-query
AURShim yaourt

# Install packages (from both standard repositories and AUR)
packages

post-install
