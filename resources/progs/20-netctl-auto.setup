#!/bin/bash
# 10-netctl-auto.setup
# aoneill - 01/15/16

SUPPORT="$CWD/support"
GLOBALS="$SUPPORT/globals"

source "$GLOBALS"

# Use utilities here
source $(expand_glob "$SUPPORT/*-passwords")
source $(expand_glob "$SUPPORT/*-accounts")

function init() {
  section netctl-auto
  
  folder="$(get_folder "$0")"

  ifaces="$(mktemp)"
  ip link | grep "^[0-9]:" | sed -e "s/^.*: \(.*\): .*/\1/g" > $ifaces
  device="$(grep wlp $ifaces | head -n 1)"

  echo "Known interfaces: $(echo "$(cat $ifaces)")"
  echo "Assuming '$device' for wireless functionality"
  echo -n "Give alternate device (nothing means '$device' is okay)"
  read alt_dev
  while [[ "$alt_dev" != "" && "$(grep "^$alt_dev\$" $ifaces)" == "" ]]
  do
    echo -n "Invalid device. Choose another: "
    read alt_dev
  done

  if [[ "$alt_dev" != "" ]]
  then
    device="$alt_dev"
  fi

  # Setup for further lookup
  echo "$device" > $WIFI_IFACE_FILE
  rm $ifaces

  systemctl enable netctl-auto@$WIRELESS_IFACE.service

  for file in $(find "$folder/" -type f -not -name "cmu-secure")
  do
    echo "Configuring $file"
    echo -n "Network password: "
    read pass

    cat "$folder/$file" | sed -e "s/\$INTERFACE/$device/g" \
      | sed -e "s/\$PASSWORD/$pass/g" > "/etc/netctl/$file"
  done
    
  # Handle CMU Secure case (given password earlier)
  tmp=$(mktemp)
  pw_lookup andrew > $tmp
  user=$(cat $tmp | head -n 1)
  password=$(cat $tmp | tail -n 1)

  echo "Configuring cmu-secure"
  file=cmu-secure
  cat "$folder/$file" | sed -e "s/\$INTERFACE/$device/g" \
    | sed -e "s/\$USER/$user/g" \
    | sed -e "s/\$PASSWORD/$password/g" > "/etc/netctl/$file"
} 

function net_get_iface() {
  cat $WIFI_IFACE_FILE
}

EXEC=$(test "${BASH_SOURCE[0]}" != "${0}"; echo $?)
[[ "$EXEC" == "1" ]] && init $@
