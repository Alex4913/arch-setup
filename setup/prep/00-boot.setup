#!/bin/bash
# 10-boot
# aoneill - 02/19/16

# Source the driver
source "$(basename "$(pwd)").sh"

# Setup boot options
function init() {
  section Boot

  # Clean up previous sections
  tell rm -rf /boot/*

  dev=$(mount | grep "/boot" | sed -e "s|^/dev/\([a-z]\+\) .*|/dev/\1|")
  while [[ "$dev" == "" ]]; do
    echo -n "Boot device ($(ls /dev/sd[a-z][0-9] \
                             | tr "\n" " ")): "
    read dev
    
    if [[ $dev =~ /dev/sd[a-z][0-9]+ ]]; then
      tell mount $dev /boot
    else
      dev=
    fi
  done 

  tell pacman --noconfirm -S linux
  tell bootctl --no-variables --path=/boot install
  
  folder="$(get_folder "$0")"
  out="/boot/loader"
  ent="entries"
  
  tell cp "$folder/loader.conf" "$out/loader.conf"
  
  for file in $(find "$folder/$ent/" -type f); do
    if [[ "$(grep -i linux $file)" != "" ]]; then
      os=$(grep "^title\s" $file | sed -e "s/^title\s\+//")
    
      while true; do
        echo -n "Partition for \"$os\" ($(ls /dev/sd[a-z][0-9] \
                                           | tr "\n" " ")): "
        read dev
        
        if [[ $dev =~ /dev/sd[a-z][0-9]+ ]]; then
          break
        fi 
      done
      
      uuid=$(blkid -s PARTUUID -o value $dev)    
      tmp=$(mktemp)
      sed -e "s/PARTUUID/PARTUUID=$uuid/g" $file > $tmp
      
      file=$(basename $file)
      tell mv $tmp "$out/$ent/$file"
    else
      file=$(basename $file)
      tell cp "$folder/$ent/$file" "$out/$ent/$file"
    fi
  done
}

# Execute init (passing arguments) if we are not sourced
EXEC=$(test "${BASH_SOURCE[0]}" != "${0}"; echo $?)
[[ "$EXEC" == "1" ]] && init $@
